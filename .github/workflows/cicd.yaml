name: Test, Build, and Deploy to EKS

on:
  push:
    branches: [main]

jobs:
  test-build-deploy:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}
      ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
      EKS_CLUSTER_NAME: ${{ secrets.EKS_CLUSTER_NAME }}
      FLASK_IMAGE: ${{ secrets.ECR_REPOSITORY }}:latest
      FLASK_PORT: "5000"

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Set up virtualenv & install dependencies
      run: |
        python -m venv venv
        source venv/bin/activate
        pip install -r requirements.txt

    - name: Run unit tests
      run: |
        source venv/bin/activate
        python test.py

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        region: ${{ env.AWS_REGION }}

    - name: Log in to Amazon ECR
      run: |
        aws ecr get-login-password --region $AWS_REGION | \
        docker login --username AWS --password-stdin $ECR_REPOSITORY

    - name: Build and Push Docker image to ECR
      run: |
        docker build --platform linux/amd64 -t $ECR_REPOSITORY:latest .
        docker push $ECR_REPOSITORY:latest

    - name: Update kubeconfig for EKS
      run: |
        aws eks update-kubeconfig \
          --region $AWS_REGION \
          --name $EKS_CLUSTER_NAME

    - name: Deploy to EKS using eks.py
      env:
        FLASK_IMAGE: ${{ env.FLASK_IMAGE }}
        FLASK_PORT: ${{ env.FLASK_PORT }}
      run: |
        source venv/bin/activate
        python eks.py
